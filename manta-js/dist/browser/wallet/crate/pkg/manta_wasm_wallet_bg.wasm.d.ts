/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_assetid_free(a: number): void;
export function assetid_new(a: number): number;
export function assetid_from_string(a: number, b: number): number;
export function __wbg_asset_free(a: number): void;
export function asset_new(a: number): number;
export function asset_from_string(a: number, b: number): number;
export function __wbg_assetmetadata_free(a: number): void;
export function assetmetadata_new(a: number): number;
export function assetmetadata_from_string(a: number, b: number): number;
export function __wbg_transaction_free(a: number): void;
export function transaction_new(a: number): number;
export function transaction_from_string(a: number, b: number): number;
export function __wbg_transactionkind_free(a: number): void;
export function transactionkind_new(a: number): number;
export function transactionkind_from_string(a: number, b: number): number;
export function __wbg_senderpost_free(a: number): void;
export function senderpost_new(a: number): number;
export function senderpost_from_string(a: number, b: number): number;
export function __wbg_receiverpost_free(a: number): void;
export function receiverpost_new(a: number): number;
export function receiverpost_from_string(a: number, b: number): number;
export function __wbg_controlflow_free(a: number): void;
export function controlflow_new(a: number): number;
export function controlflow_from_string(a: number, b: number): number;
export function network_new(a: number): number;
export function network_from_string(a: number, b: number): number;
export function __wbg_transferpost_free(a: number): void;
export function transferpost_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number): number;
export function __wbg_polkadotjsledger_free(a: number): void;
export function polkadotjsledger_new(a: number): number;
export function __wbg_ledgererror_free(a: number): void;
export function __wbg_signererror_free(a: number): void;
export function __wbg_signer_free(a: number): void;
export function signer_new(a: number, b: number): number;
export function __wbg_walleterror_free(a: number): void;
export function __wbg_wallet_free(a: number): void;
export function wallet_new(a: number, b: number): number;
export function wallet_balance(a: number, b: number, c: number, d: number): void;
export function wallet_contains(a: number, b: number): number;
export function wallet_assets(a: number): number;
export function wallet_checkpoint(a: number): number;
export function wallet_restart(a: number, b: number): number;
export function wallet_sync(a: number, b: number): number;
export function wallet_sync_partial(a: number, b: number): number;
export function wallet_check(a: number, b: number, c: number): void;
export function wallet_sign(a: number, b: number, c: number, d: number): number;
export function wallet_post(a: number, b: number, c: number, d: number): number;
export function wallet_receiving_keys(a: number, b: number): number;
export function wallet_address(a: number, b: number): number;
export function __wbg_network_free(a: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h05cb8462c9f0ee2f(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h2737c40f1eb106a8(a: number, b: number, c: number, d: number): void;
